name: Stage Deploy

on:
  workflow_dispatch:

jobs:
  Deploy:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Next.js Build
        uses: actions/cache@v4
        with:
          path: |
            .next/
            .open-next/
            .sst/
          key: cache-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]xs') }}
          restore-keys: |
            cache-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Install AWS Creds
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Set environment variables for build
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL_STAGING }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_URL=${{ vars.NEXT_PUBLIC_URL }}" >> $GITHUB_ENV
          echo "COMMIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
          echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> $GITHUB_ENV
          echo "AUTH_GITHUB_ID=${{ secrets.AUTH_GITHUB_ID }}" >> $GITHUB_ENV
          echo "AUTH_GITHUB_SECRET=${{ secrets.AUTH_GITHUB_SECRET }}" >> $GITHUB_ENV
          echo "AUTH_TRUST_HOST=${{ vars.AUTH_TRUST_HOST }}" >> $GITHUB_ENV
          echo "AUTH_ALLOWED_EMAIL=${{ vars.AUTH_ALLOWED_EMAIL }}" >> $GITHUB_ENV
      - name: Set SST Config Secret
        run: |
          npx sst secret set DATABASE_URL ${{ secrets.DATABASE_URL_STAGING }} --stage staging
          npx sst secret set NEXT_PUBLIC_URL ${{ vars.NEXT_PUBLIC_URL }} --stage staging
          npx sst secret set COMMIT_SHA ${{ github.sha }} --stage staging
          npx sst secret set AUTH_SECRET ${{ secrets.AUTH_SECRET }} --stage staging
          npx sst secret set AUTH_TRUST_HOST ${{ vars.AUTH_TRUST_HOST }} --stage staging
          npx sst secret set AUTH_ALLOWED_EMAIL ${{ vars.AUTH_ALLOWED_EMAIL }} --stage staging
      - name: Deploy with SST
        run: pnpm run deploy:staging

      - name: Clean up AWS Profile
        run: rm -rf ~/.aws
